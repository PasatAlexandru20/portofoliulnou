{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevelopmentSites\\\\progres\\\\newportofolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useMediaQuery from \"./hooks/useMediaQuery\";\nimport Navbar from \"./scenes/Navbar\";\nimport DotGroup from './scenes/DotGroup';\nimport Landing from './scenes/Landing';\nimport LineGradient from './components/LineGradient';\nimport MySkills from './scenes/MySkills';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Selecteaza partea de navigare in care te afli\n  const [selectedPage, setSelectedPage] = useState(\"home\");\n  //Check if the min-width is above 1060px\n  const isAboveMediumScreens = useMediaQuery(\"(min-width: 1060px)\");\n  //Create isTopOfPage STATE\n  const [isTopOfPage, setIsTopOfPage] = useState(true);\n  useEffect(() => {\n    //function handleScroll\n    const handleScroll = () => {\n      //Check if the window.scrollY == 0 // then  const [isTopOfPage, setIsTopOfPage] = useState(true) = TRUE\n      if (window.scrollY == 0) setIsTopOfPage(true);\n      if (window.scrollY !== 0) setIsTopOfPage(false);\n    };\n    //Remove eventListener\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app bg-deep-blue\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isTopOfPage: isTopOfPage,\n      selectedPage: selectedPage,\n      setSelectedPage: selectedPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-5/6 mx-auto md:h-full\",\n      children: [isAboveMediumScreens && /*#__PURE__*/_jsxDEV(DotGroup\n      //Padd in selected page to DotGroup\n      , {\n        selectedPage: selectedPage,\n        setSelectedPage: setSelectedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Landing, {\n        setSelectedPage: setSelectedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(LineGradient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-5/6 mx-auto md:h-full\",\n      children: /*#__PURE__*/_jsxDEV(MySkills, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XZgCAWOX2RynmE0OSPp7tyxpR+I=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMediaQuery","Navbar","DotGroup","Landing","LineGradient","MySkills","App","selectedPage","setSelectedPage","isAboveMediumScreens","isTopOfPage","setIsTopOfPage","handleScroll","window","scrollY","addEventListener","removeEventListener"],"sources":["D:/DevelopmentSites/progres/newportofolio/src/App.js"],"sourcesContent":["\nimport { useState, useEffect} from \"react\";\nimport useMediaQuery from \"./hooks/useMediaQuery\";\nimport Navbar from \"./scenes/Navbar\";\nimport DotGroup from  './scenes/DotGroup'\nimport Landing from './scenes/Landing'\nimport LineGradient from './components/LineGradient'\nimport MySkills from './scenes/MySkills'\n\n\n\nfunction App() {\n  //Selecteaza partea de navigare in care te afli\n  const [selectedPage, setSelectedPage] = useState(\"home\");\n  //Check if the min-width is above 1060px\n  const isAboveMediumScreens = useMediaQuery(\"(min-width: 1060px)\");\n  //Create isTopOfPage STATE\n  const [isTopOfPage, setIsTopOfPage] = useState(true)\n\n  useEffect (() => {\n    //function handleScroll\n    const handleScroll= () => {\n      //Check if the window.scrollY == 0 // then  const [isTopOfPage, setIsTopOfPage] = useState(true) = TRUE\n      if(window.scrollY == 0) setIsTopOfPage(true);\n      if(window.scrollY !==0) setIsTopOfPage(false);\n    }\n    //Remove eventListener\n     window.addEventListener(\"scroll\", handleScroll)\n     return () => window.removeEventListener(\"scroll\", handleScroll)\n  }, [])\n\n  return (\n    <div className=\"app bg-deep-blue\">\n      <Navbar \n      isTopOfPage={isTopOfPage} \n      selectedPage = {selectedPage} \n      setSelectedPage = {selectedPage}\n      />\n  <div className=\"w-5/6 mx-auto md:h-full\">\n    {/* If is above medium screens and if that is true , create DotGroup */}\n   {isAboveMediumScreens && (\n    <DotGroup\n    //Padd in selected page to DotGroup\n      selectedPage={selectedPage}\n      setSelectedPage={setSelectedPage}\n    />\n   )}\n   <Landing setSelectedPage={setSelectedPage}/>\n  </div>\n  <LineGradient/>\n  <div className=\"w-5/6 mx-auto md:h-full\"> \n   <MySkills/>\n  </div>\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,QAAQ,MAAO,mBAAmB;AACzC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,mBAAmB;AAAA;AAIxC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD;EACA,MAAMW,oBAAoB,GAAGT,aAAa,CAAC,qBAAqB,CAAC;EACjE;EACA,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAE,MAAM;IACf;IACA,MAAMa,YAAY,GAAE,MAAM;MACxB;MACA,IAAGC,MAAM,CAACC,OAAO,IAAI,CAAC,EAAEH,cAAc,CAAC,IAAI,CAAC;MAC5C,IAAGE,MAAM,CAACC,OAAO,KAAI,CAAC,EAAEH,cAAc,CAAC,KAAK,CAAC;IAC/C,CAAC;IACD;IACCE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC/B,QAAC,MAAM;MACP,WAAW,EAAEF,WAAY;MACzB,YAAY,EAAIH,YAAa;MAC7B,eAAe,EAAIA;IAAa;MAAA;MAAA;MAAA;IAAA,QAC9B,eACN;MAAK,SAAS,EAAC,yBAAyB;MAAA,WAEtCE,oBAAoB,iBACpB,QAAC;MACD;MAAA;QACE,YAAY,EAAEF,YAAa;QAC3B,eAAe,EAAEC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAEnC,eACD,QAAC,OAAO;QAAC,eAAe,EAAEA;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC,eACN,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAE,eACf;MAAK,SAAS,EAAC,yBAAyB;MAAA,uBACvC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAGV;AAAC,GA7CQF,GAAG;EAAA,QAImBN,aAAa;AAAA;AAAA,KAJnCM,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}